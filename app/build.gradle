apply plugin: 'com.android.application'

def key = file('F:\\Keystore\\tianma.jks')

def keyProps = new Properties()
keyProps.load(new FileInputStream("app\\signature.properties"))

def static releaseTime() {
    return new Date().format("yyMMdd", TimeZone.default)
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tianma.fkmiui"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"

        buildConfigField("String", "LOG_TAG", "\"FkMiui\"")
        buildConfigField("boolean", "LOG_TO_XPOSED", "true")
        buildConfigField("boolean", "LOG_TO_EDXPOSED", "true")
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    signingConfigs {
        release {
            storeFile key
            storePassword keyProps['STORE_PASSWORD']
            keyAlias keyProps['KEY_ALIAS']
            keyPassword keyProps['KEY_PASSWORD']
        }
    }

    buildTypes {
        debug {
            buildConfigField("int", "LOG_LEVEL", "2")

            if (key.exists()) {
                println "using keystore"
                signingConfig signingConfigs.release
            } else {
                println "using no keystore"
            }
        }

        release {
            buildConfigField("int", "LOG_LEVEL", "4")

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (key.exists()) {
                println "using keystore"
                signingConfig signingConfigs.release
            } else {
                println "using no keystore"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            output.outputFileName = "FkMiui_${variant.versionName.replaceAll('\\s+', '_')}_${releaseTime()}_${variant.buildType.name.charAt(0)}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0' // material design support
    implementation 'androidx.preference:preference:1.1.0-beta01' // preference-v7
    implementation 'androidx.browser:browser:1.0.0' // custom tabs

    // Xposed
    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    // Android Shell
    implementation 'com.jaredrummler:android-shell:1.0.0'

    // Material Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    // color picker preference
    implementation 'com.jaredrummler:colorpicker:1.1.0'
}
